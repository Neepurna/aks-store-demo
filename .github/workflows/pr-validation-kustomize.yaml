name: PR Validation - Kustomize

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'kustomize/**'
      - 'src/**'
      - '.github/workflows/**'

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Validate kustomize configurations
        run: |
          echo "🔍 Validating kustomize base configuration..."
          cd kustomize/base
          kustomize build . > base-output.yaml
          kubectl apply --dry-run=client -f base-output.yaml
          
          echo "🔍 Validating kustomize dev overlay..."
          cd ../overlays/dev
          kustomize build . > dev-output.yaml
          kubectl apply --dry-run=client -f dev-output.yaml
          
          echo "🔍 Validating kustomize staging overlay..."
          cd ../staging
          kustomize build . > staging-output.yaml
          kubectl apply --dry-run=client -f staging-output.yaml
          
          echo "🔍 Validating kustomize prod overlay..."
          cd ../prod
          kustomize build . > prod-output.yaml
          kubectl apply --dry-run=client -f prod-output.yaml
          
          echo "✅ All kustomize configurations are valid!"

      - name: Check for security issues
        run: |
          # Check for common security issues in manifests
          echo "🔐 Checking for security issues..."
          
          # Check for privileged containers
          if grep -r "privileged: true" kustomize/; then
            echo "❌ Found privileged containers - this is a security risk!"
            exit 1
          fi
          
          # Check for hostNetwork
          if grep -r "hostNetwork: true" kustomize/; then
            echo "❌ Found hostNetwork usage - this is a security risk!"
            exit 1
          fi
          
          # Check for hostPID
          if grep -r "hostPID: true" kustomize/; then
            echo "❌ Found hostPID usage - this is a security risk!"
            exit 1
          fi
          
          # Check for runAsRoot
          if grep -r "runAsUser: 0" kustomize/; then
            echo "⚠️  Found containers running as root - consider using non-root user"
          fi
          
          echo "✅ Security check completed"

      - name: Validate resource limits
        run: |
          echo "📊 Checking resource limits..."
          
          # Check if all containers have resource limits
          for file in kustomize/base/*.yaml; do
            if [ -f "$file" ]; then
              if grep -q "kind: Deployment" "$file"; then
                if ! grep -q "resources:" "$file" || ! grep -q "limits:" "$file"; then
                  echo "⚠️  $file: Missing resource limits"
                fi
              fi
            fi
          done
          
          echo "✅ Resource limits check completed"

      - name: Generate deployment preview
        run: |
          echo "📋 Generating deployment preview..."
          mkdir -p pr-preview
          
          echo "## 🚀 Deployment Preview" > pr-preview/summary.md
          echo "" >> pr-preview/summary.md
          echo "This PR will deploy the following resources:" >> pr-preview/summary.md
          echo "" >> pr-preview/summary.md
          
          for env in dev staging prod; do
            echo "### $env Environment" >> pr-preview/summary.md
            echo "" >> pr-preview/summary.md
            echo '```yaml' >> pr-preview/summary.md
            cd kustomize/overlays/$env
            kustomize build . | head -50 >> ../../../pr-preview/summary.md
            echo '```' >> ../../../pr-preview/summary.md
            echo "" >> pr-preview/summary.md
            cd ../../..
          done

      - name: Comment PR with preview
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'pr-preview/summary.md';
            
            if (fs.existsSync(path)) {
              const summary = fs.readFileSync(path, 'utf8');
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            }

      - name: Upload validation artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: kustomize-validation
          path: |
            kustomize/base/base-output.yaml
            kustomize/overlays/dev/dev-output.yaml
            kustomize/overlays/staging/staging-output.yaml
            kustomize/overlays/prod/prod-output.yaml
            pr-preview/
